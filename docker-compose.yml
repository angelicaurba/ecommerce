version: "3.7"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - wa2-group6

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 29093:29093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29093, PLAINTEXT_EXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - wa2-group6

  kafka-connect:
    #    build:
    #        context: ../kafka-connector-router
    #        dockerfile: Dockerfile
    #    image:  custom-connect
    image: debezium/connect:1.6
    container_name: kafka-connect
    depends_on:
      - kafka
      - mysql
    #    volumes:
    #      - ../kafka-connector-router/build
    ports:
      - 8083:8083
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - wa2-group6


  mysql:
    restart: always
    image: mysql
    container_name: mysql
    ports:
      - 3306:3306
    volumes:
      - "./databases/init.sql:/docker-entrypoint-initdb.d/init.sql"
    networks:
      - wa2-group6
    environment:
      MYSQL_ROOT_PASSWORD: admin


  mongo:
    image: mongo
    restart: always
    container_name: mongo
    ports:
      - 27017:27017
    networks:
      - wa2-group6


  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    image: wa2-group6-eureka-server
    hostname: eureka-server
    container_name: eureka-server
    ports:
      - 8761:8761
    networks:
      - wa2-group6


#  this is catalogue-service + gateway
  catalogue-service:
    build:
      context: ./catalogue-service
      dockerfile: Dockerfile
    image: wa2-group6-catalogue-service
    hostname: catalogue-service
    container_name: catalogue-service
    ports:
      - 8080:8080
    networks:
      - wa2-group6
    volumes:
      - ./common/src/main/resources/rsa.pubkey:/src/main/resources/rsa.pubkey
    depends_on:
      - eureka-server
      - mongo
      - mysql
    environment:
      # Important for clients to register with eureka
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/


  warehouse-service:
    build:
      context: ./warehouse-service/warehouse-server
      dockerfile: Dockerfile
    image: wa2-group6-warehouse-service
    hostname: warehouse-service
    container_name: warehouse-service
    networks:
      - wa2-group6
    volumes:
      - ./common/src/main/resources/rsa.pubkey:/src/main/resources/rsa.pubkey
    depends_on:
      - eureka-server
      - catalogue-service
    environment:
      # Important for clients to register with eureka
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/


  wallet-service:
    build:
      context: ./wallet-service/wallet-server
      dockerfile: Dockerfile
    image: wa2-group6-wallet-service
    hostname: wallet-service
    container_name: wallet-service
    networks:
      - wa2-group6
    volumes:
      - ./common/src/main/resources/rsa.pubkey:/src/main/resources/rsa.pubkey
    depends_on:
      - eureka-server
      - catalogue-service
    environment:
      # Important for clients to register with eureka
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/


  user-service:
    build:
      context: ./user-service/user-server
      dockerfile: Dockerfile
    image: wa2-group6-user-service
    hostname: user-service
    container_name: user-service
    networks:
      - wa2-group6
    volumes:
      - ./common/src/main/resources/rsa.pubkey:/src/main/resources/rsa.pubkey
      - ./user-service/user-server/src/main/resources/rsa.key:/src/main/resources/rsa.key
    depends_on:
      - eureka-server
      - catalogue-service
    environment:
      # Important for clients to register with eureka
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/


  order-service:
    build:
      context: ./order-service/order-server
      dockerfile: Dockerfile
    image: wa2-group6-order-service
    hostname: order-service
    container_name: order-service
    networks:
      - wa2-group6
    volumes:
      - ./common/src/main/resources/rsa.pubkey:/src/main/resources/rsa.pubkey
    depends_on:
      - eureka-server
      - catalogue-service
    environment:
      # Important for clients to register with eureka
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/


  mail-service:
    build:
      context: ./mail-service/mail-server
      dockerfile: Dockerfile
    image: wa2-group6-mail-service
    hostname: mail-service
    container_name: mail-service
    networks:
      - wa2-group6
    depends_on:
      - eureka-server
      - catalogue-service
    environment:
      # Important for clients to register with eureka
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/



networks:
  wa2-group6:
    driver: bridge